# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    instance:
        appname: ifris-registry
        instanceId: jhipsterregistry:${spring.application.instance-id:${random.value}}
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 10
        status-page-url-path: ${management.endpoints.web.base-path}/info
        health-check-url-path: ${management.endpoints.web.base-path}/health
        metadata-map:
            zone: primary # This is needed for the load balancer
            profile: ${spring.profiles.active}
            version: ${info.project.version:}
            git-version: ${git.commit.id.describe:}
            git-commit: ${git.commit.id.abbrev:}
            git-branch: ${git.branch:}
    client:
            enabled: true
            fetch-registry: false
            register-with-eureka: false
            instance-info-replication-interval-seconds: 10
            registry-fetch-interval-seconds: 10
            service-url:
                defaultZone: http://admin:${spring.security.user.password:admin}@localhost:${server.port}/eureka/
        server:
            # see discussion about enable-self-preservation:
            # https://github.com/jhipster/generator-jhipster/issues/3654
            enable-self-preservation: false
            peer-node-read-timeout-ms: 1000
        dashboard:
            path: /registry
        datacenter: IFRIS-DataCenter
        environment: IFRIS-Environment
ribbon:
    eureka:
        enabled: true
# See http://cloud.spring.io/spring-cloud-netflix/spring-cloud-netflix.html
zuul: # those values must be configured depending on the application specific needs
    sensitive-headers: Cookie,Set-Cookie #see https://github.com/spring-cloud/spring-cloud-netflix/issues/3126
    host:
        max-total-connections: 1000
        max-per-route-connections: 100
    semaphore:
        max-semaphores: 500
    prefix: /services/
    strip-prefix: true

# See https://github.com/Netflix/Hystrix/wiki/Configuration
hystrix:
    command:
        default:
            execution:
                isolation:
                    thread:
                        timeoutInMilliseconds: 10000

management:
    endpoints:
        web:
            base-path: /management
            exposure:
                include: ["configprops", "env", "health", "info", "threaddump", "logfile", "jhi-metrics", "prometheus" ]
    endpoint:
        health:
            show-details: when-authorized
        jhi-metrics:
            enabled: true
    info:
        git:
            mode: full
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
    metrics:
        export:
            # Prometheus is the default metrics backend
            prometheus:
                enabled: true
                step: 60
        binders:
            jvm:
                enabled: true
            processor:
                enabled: true
            uptime:
                enabled: true
            logback:
                enabled: true
            files:
                enabled: true
            integration:
                enabled: true
        distribution:
            percentiles-histogram:
                all: true
            percentiles:
                all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
        web:
            server:
                auto-time-requests: true

spring:
    application:
        name: ifris-registry
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    security:
            user:
                name: admin
                password: admin
                roles: USER,ADMIN
    thymeleaf:
        mode: HTML
server:
    port: 8761
logging:
    file: target/jhipster-registry.log

server:
    servlet:
        session:
            cookie:
                http-only: true

# Properties to be exposed on the /info management endpoint
info:
    # Comma separated list of profiles that will trigger the ribbon to show
    display-ribbon-on-profiles: "dev"

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    async:
        core-pool-size: 2
        max-pool-size: 50
        queue-capacity: 10000
    # By default CORS is disabled. Uncomment to enable.
    #cors:
        #allowed-origins: "*"
        #allowed-methods: "*"
        #allowed-headers: "*"
        #exposed-headers: "Authorization,Link,X-Total-Count"
        #allow-credentials: true
        #max-age: 1800
    mail:
        from: JHipsterRegistry@localhost
    swagger:
            default-include-pattern: /(api|config)/.*
            title: IFRIS Registry API
            description: IFRIS Registry API documentation
            version: ${info.project.version}

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
